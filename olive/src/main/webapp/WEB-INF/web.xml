<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>olive</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
 <!-- 커넥션 풀 사용을 위한 설정 -->
 <resource-ref>
  <description>Oracle Datasource example</description>
  <res-ref-name>jdbc/myoracle</res-ref-name>
  <res-type>javax.sql.DataSource</res-type>
  <res-auth>Container</res-auth>
 </resource-ref>
 
 <!-- 필터 등록하기 -->
 <filter>
  <filter-name>characterEncodingFilter</filter-name>
  <filter-class>com.filter.CharacterEncodingFilter</filter-class>
  <init-param><!-- 초기화할 때 파라미터 값 -->
   <param-name>encoding</param-name>
   <param-value>UTF-8</param-value>
  </init-param>
 </filter>
 <filter-mapping>
  <filter-name>characterEncodingFilter</filter-name>
  <url-pattern>/*</url-pattern><!-- 모든 자원들 요청할 때(GET, POST 방식 상관없이) -->
  <dispatcher>REQUEST</dispatcher><!-- 요청할 때 -->
 </filter-mapping>
 
 <!-- 단 하나의 서블릿 == MVC의 C(컨트롤러) 등록 -->
 <servlet>
  <servlet-name>dispatcher</servlet-name>
  <servlet-class>controller.DispatcherServlet</servlet-class>
  <init-param><!-- 서블릿 객체가 생성될 때 commandHandler.properties 파일을 path라는 이름으로 가져오겠다. -->
   <param-name>path</param-name>
   <param-value>/WEB-INF/commandHandler.properties</param-value><!-- 사용하고자 하는 프로터피 파일 경로 잘주기 -->
  </init-param>
  <load-on-startup>1</load-on-startup>
 </servlet>
 <servlet-mapping>
  <servlet-name>dispatcher</servlet-name>
  <url-pattern>*.do</url-pattern>
 </servlet-mapping>
 
</web-app>